{"version":3,"sources":["components/ui/common/c1-SuperInputText/SuperInputText.module.css","components/ui/common/c2-SuperButton/SuperButton.module.css","components/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/ui/routes/routs.tsx","components/ui/registration/signUp.tsx","components/ui/login/signIn.tsx","components/ui/common/error/cat_standing_animated.gif","components/ui/common/error/Error404.tsx","components/ui/profile/profile.tsx","components/ui/login/recovery.tsx","components/ui/login/changePassword.tsx","components/ui/header/header.tsx","components/bll/signInReducer.ts","components/bll/signUpReducer.ts","components/bll/store.tsx","components/ui/common/c1-SuperInputText/SuperInputText.tsx","components/ui/common/c2-SuperButton/SuperButton.tsx","components/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/ui/main/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PATH","Routs","to","SignUp","SignIn","Error404","style","src","logo","alt","onClick","Profile","Recovery","ChangePassword","Header","path","exact","render","initialState","singInReducer","state","action","type","singUpReducer","reducers","combineReducers","signin","singup","store","createStore","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","e","currentTarget","value","key","placeholder","SuperButton","red","finalClassName","default","color","background","margin","border","padding","borderRadius","SuperCheckbox","onChangeChecked","children","checkbox","checked","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad8c1843.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__24zmz\",\"errorInput\":\"SuperInputText_errorInput__2ddLg\",\"error\":\"SuperInputText_error__OT1yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__8Ta_X\",\"red\":\"SuperButton_red__2LBRA\",\"use1\":\"SuperButton_use1__3DpKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__21Z0s\",\"spanClassName\":\"SuperCheckbox_spanClassName__2fQUp\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nexport const PATH = {\r\n    SIGN_IN: \"/signin\",\r\n    SIGN_UP: \"/signup\",\r\n    PROFILE: \"/profile\",\r\n    RECOVERY: \"/recovery\",\r\n    CHANGE_PASSWORD: \"/new-pass\"\r\n}\r\n\r\nfunction Routs() {\r\n  return (\r\n    <div>\r\n        <div><NavLink to={PATH.SIGN_UP}><button>Sign Up</button></NavLink></div>\r\n        <div><NavLink to={PATH.SIGN_IN}><button>Sign In</button></NavLink></div>\r\n        <div><NavLink to={\"/profile\"}><button>Profile</button></NavLink></div>\r\n        <div><NavLink to={\"/recovery\"}><button>Recovery</button></NavLink></div>\r\n        <div><NavLink to={\"/new-pass\"}><button>Change password</button></NavLink></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routs;\r\n","import React from 'react';\r\n\r\nconst SignUp = () => {\r\n    return (\r\n        <div>\r\n            Регистрация\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import React from 'react';\r\n\r\nconst SignIn = () => {\r\n    return (\r\n        <div>\r\n            Логинизация\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;","export default __webpack_public_path__ + \"static/media/cat_standing_animated.7a5695a9.gif\";","import React from \"react\";\r\nimport logo from './cat_standing_animated.gif'\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport { PATH } from \"../../routes/routs\";\r\n\r\nfunction Error404() {\r\n    // grid-template-columns: 45% 54%;\r\n    // grid-template-rows: 20% 20% 20% 20%;\r\n    return (\r\n        <div style={{\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"40% 40% 20%\",\r\n            \"gridTemplateRows\": \"20% 20% 20% 20%\",\r\n        }}>\r\n            <img style={{\r\n                \"width\": \"32%\",\r\n                \"gridColumn\": \"1/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }} src={logo} alt={\"404 error cat\"}/>\r\n            <h1 style={{\r\n                \"marginBottom\": \"0.5rem\",\r\n                \"color\": \"#e32\",\r\n                \"fontSize\": \"4rem\",\r\n                \"lineHeight\": \"4.15rem\",\r\n                \"gridColumn\": \"2/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }}>Oops.</h1>\r\n            <h2 style={{\r\n                \"gridArea\": \"2 / 2 / 2 / 5\",\r\n                \"color\": \"#e32\",\r\n                \"marginTop\": 0,\r\n            }}>We can't find the page you're looking for.</h2>\r\n            <p style={{\r\n                \"gridArea\": \"3 / 2 / 2 / 3\",\r\n                \"margin\": \"38px 0 0 0\",\r\n            }}>It may have expired, or there could be a typo. Maybe you can find what you need from our homepage.\r\n            </p>\r\n            {/*<div>404</div>*/}\r\n            {/*<div>Page not found!</div>*/}\r\n            <button onClick={() => <Redirect to={PATH.SIGN_IN}/>} style={{\r\n                \"gridArea\": \"3 / 2 / 4 / 3\",\r\n                \"fontSize\": \"300%\",\r\n                \"width\": \"85%\",\r\n                \"height\": \"62%\",\r\n            }}><Link style={{\r\n                \"textDecoration\": \"none\",\r\n                \"color\": \"black\",\r\n            }} to=\"/\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</Link>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nconst Recovery = () => {\r\n    return (\r\n        <div>\r\n            Восстановление пароля\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recovery;","import React from 'react';\r\n\r\nconst ChangePassword = () => {\r\n    return (\r\n        <div>\r\n            Изменение пароля\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport {NavLink, Redirect, Route, Switch} from 'react-router-dom';\r\nimport Routs, {PATH} from '../routes/routs';\r\nimport SignUp from \"../registration/signUp\";\r\nimport SignIn from '../login/signIn';\r\nimport Error404 from '../common/error/Error404';\r\nimport Profile from \"../profile/profile\";\r\nimport Recovery from '../login/recovery';\r\nimport ChangePassword from \"../login/changePassword\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/\"}>\r\n                <button>Routs</button>\r\n            </NavLink>\r\n            <Switch>\r\n\r\n                <Route path='/' exact render={() => <Routs/>}/>\r\n                <Route path='/signup' render={() => <SignUp/>}/>\r\n                <Route path='/signin' render={() => <SignIn/>}/>\r\n                <Route path='/profile' render={() => <Profile/>}/>\r\n                <Route path='/recovery' render={() => <Recovery/>}/>\r\n                <Route path='/new-pass' render={() => <ChangePassword/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","\r\nlet initialState = {\r\n};\r\n\r\nconst singInReducer = (state = initialState, action:any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default singInReducer;","\r\nlet initialState = {\r\n};\r\n\r\nconst singUpReducer = (state = initialState, action:any) => {\r\n\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default singUpReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport singInReducer from \"./signInReducer\";\r\nimport singUpReducer from \"./signUpReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    signin: singInReducer,\r\n    singup: singUpReducer\r\n\r\n});\r\n\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    // const finalInputClassName = `${s.errorInput} ${className ? className : ''}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${s.superInput} ${className ? className : ''}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Введите приветствие'}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n;\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button style={{\r\n            color: '#3bff25',\r\n            background: '#9400d3',\r\n            margin: '10px',\r\n            border: 'none',\r\n            padding: '5px',\r\n            borderRadius: '20%',\r\n\r\n        }}\r\n\r\n                className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label style={{\r\n            'color': 'gold',\r\n            'display': 'flex',\r\n            'margin': '5px'\r\n        }}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from 'react';\r\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Header from \"./components/ui/header/header\";\nimport store from \"./components/bll/store\";\nimport Main from \"./components/ui/main/main\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <HashRouter>\n                    <Header/>\n                    <Main/>\n                </HashRouter>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}